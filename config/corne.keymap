/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "features/keys_hu.h"

/* use helper macros to define left and right hand keys */
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h" 
/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumb keys

/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)


#define DEFAULT 0
#define L_NUM   1
#define L_SYM   2
#define L_SYS   3
#define L_NAV   4

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// ╭───────────╮╭────────────────┬────────────────┬─────────────────┬──────────────────┬───────────╮   ╭───────────┬──────────────────┬─────────────────┬─────────────────┬────────────────╮╭──────────╮ 
     &sl L_SYS    &kp HU_Q         &kp HU_W         &kp HU_F          &kp HU_P           &kp HU_B        &kp HU_J    &kp HU_L           &kp HU_U          &kp HU_Y          &kp HU_SEMI       &kp BSPC
// ├───────────┤├────────────────┼────────────────┼─────────────────┼──────────────────┼───────────┤   ├───────────┼──────────────────┼─────────────────┼─────────────────┼────────────────┤├──────────┤
     &kp ESC      &hml LALT HU_A   &hml LGUI HU_R   &hml LCTRL HU_S   &hml LSHIFT HU_T   &kp HU_G        &kp HU_M    &hmr RSHIFT HU_N   &hmr RCTRL HU_E   &hmr RGUI HU_I    &hmr RALT HU_O    &kp RET
// ├───────────┤├────────────────┼────────────────┼─────────────────┼──────────────────┼───────────┤   ├───────────┼──────────────────┼─────────────────┼─────────────────┼────────────────┤├──────────┤
     &kp LSHFT    &kp HU_Z         &kp HU_X         &kp HU_C          &kp HU_D           &kp HU_V        &kp HU_K    &kp HU_H           &kp HU_COMMA      &kp HU_DOT        &kp HU_MINUS      &none
// ╰───────────╯╰────────────────┴────────────────┼─────────────────┼──────────────────┼───────────┤   ├───────────┼──────────────────┼─────────────────┼─────────────────┴────────────────╯╰──────────╯
                                                    &key_repeat       &kp TAB            &mo L_NUM       &kp SPACE   &none              &none
//                                                ╰─────────────────┴──────────────────┴───────────╯   ╰───────────┴──────────────────┴─────────────────╯
                        >;
                };
                number_layer {
                        label = "NUMBER";
                        bindings = <
// ╭───────────╮╭───────────┬───────────┬───────────┬────────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────╮╭───────╮ 
     &kp HU_N0    &kp HU_N1   &kp HU_N2   &kp HU_N3   &kp HU_N4    &kp HU_N5       &kp HU_N6   &kp HU_N7   &kp HU_N8   &kp HU_N9   &none    &none
// ├───────────┤├───────────┼───────────┼───────────┼────────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────┤├───────┤
     &none        &kp LALT    &kp LGUI    &kp LCTRL   &kp LSHIFT   &kp HU_N1       &none       &kp HU_N4   &kp HU_N5   &kp HU_N6   &none    &none
// ├───────────┤├───────────┼───────────┼───────────┼────────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────┤├───────┤
     &none        &none       &none       &kp HU_N0   &kp HU_N9    &kp HU_N2       &kp HU_N0   &kp HU_N1   &kp HU_N2   &kp HU_N3   &none    &none
// ╰───────────╯╰───────────┴───────────┼───────────┼────────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────╯╰───────╯
                                          &none       &none        &none           &none       &none       &none
//                                      ╰───────────┴────────────┴───────────╯   ╰───────────┴───────────┴───────────╯
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                system_layer {
                        label = "SYSTEM";
                        bindings = <
// ╭─────────────╮╭──────────────┬──────────────┬──────────────┬───────────────┬────────────────╮   ╭─────────────┬───────────┬───────────┬───────────┬───────╮╭───────╮ 
     &soft_off      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4         &none         &none       &none       &none       &none    &none
// ├─────────────┤├──────────────┼──────────────┼──────────────┼───────────────┼────────────────┤   ├─────────────┼───────────┼───────────┼───────────┼───────┤├───────┤
     &bt BT_CLR     &none          &none          &none          &none           &sys_reset           &sys_reset    &none       &none       &none       &none    &none
// ├─────────────┤├──────────────┼──────────────┼──────────────┼───────────────┼────────────────┤   ├─────────────┼───────────┼───────────┼───────────┼───────┤├───────┤
     &bt BT_DISC    &none          &none          &none          &none           &bootloader          &bootloader   &none       &none       &none       &none    &none
// ╰─────────────╯╰──────────────┴──────────────┼──────────────┼───────────────┼────────────────┤   ├─────────────┼───────────┼───────────┼───────────┴───────╯╰───────╯
                                                  &none          &none           &none                &none         &none       &none
//                                              ╰──────────────┴───────────────┴────────────────╯   ╰─────────────┴───────────┴───────────╯
                        >;
                };


        };
};

// vim: set shiftwidth=2 tabstop=2 expandtab nowrap:
